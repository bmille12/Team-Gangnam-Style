/*
 *
 * Confidential Information of Telekinesys Research Limited (t/a Havok). Not for disclosure or distribution without Havok's
 * prior written consent. This software contains code, techniques and know-how which is confidential and proprietary to Havok.
 * Product and Trade Secret source code contains trade secrets of Havok. Havok Software (C) Copyright 1999-2012 Telekinesys Research Limited t/a Havok. All Rights Reserved. Use of this software is subject to the terms of an end user license agreement.
 *
 */

// AI specific product patches applied to release 660.
// This file is #included by hkaiPatches_660.cpp

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiWorldPendingGoal", 0)
	HK_PATCH_MEMBER_ADDED("numPositions", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("character", TYPE_OBJECT, "hkaiCharacter", 0)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
	HK_PATCH_DEPENDS("hkaiCharacter", 0)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiDefaultLocalSteering", 0)
	HK_PATCH_PARENT_SET(HK_NULL, "hkaiLocalSteering")
	HK_PATCH_MEMBER_ADDED("pathFollowingProperties", TYPE_STRUCT, "hkaiDefaultLocalSteeringPathFollowingProperties", 0)
	HK_PATCH_MEMBER_ADDED("avoidanceProperties", TYPE_OBJECT, "hkaiAvoidanceSolverAvoidanceProperties", 0)
	HK_PATCH_DEPENDS("hkaiLocalSteering", 0)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkaiDefaultLocalSteeringPathFollowingProperties", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
	HK_PATCH_DEPENDS("hkaiAvoidanceSolverAvoidanceProperties", 2)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiPathFollowingProperties", 0, "hkaiDefaultLocalSteeringPathFollowingProperties", 0)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiLocalSteering", 0)
	HK_PATCH_PARENT_SET(HK_NULL, "hkReferencedObject")
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiWorld", 3, "hkaiWorld", 4)
	HK_PATCH_MEMBER_REMOVED("characterRadiusMultiplier", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("pendingGoals", TYPE_ARRAY_STRUCT, "hkaiWorldPendingGoal", 0)
	HK_PATCH_MEMBER_ADDED("pendingGoalPositions", TYPE_ARRAY_VEC_4, HK_NULL, 0)
	HK_PATCH_DEPENDS("hkaiWorldPendingGoal", 0)
	//HK_PATCH_FUNCTION(hkaiWorld_3_to_4)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiCharacter", 4, "hkaiCharacter", 5)
	HK_PATCH_MEMBER_REMOVED("goalPosition", TYPE_VEC_4, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("angularVelocity", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("startNode", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("goalNode", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("debugDisplayEnabled", TYPE_BYTE, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("potentialGoalPositions", TYPE_ARRAY_VEC_4, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("goalPositionSet", TYPE_BYTE, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("repathDelay", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("desiredVelocity", TYPE_VEC_4, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("radius", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("localSteering", TYPE_OBJECT, "hkaiLocalSteering", 0)
	HK_PATCH_FUNCTION(hkaiCharacter_4_to_5) // func
	HK_PATCH_MEMBER_REMOVED("pathFollowingProperties", TYPE_STRUCT, "hkaiDefaultLocalSteeringPathFollowingProperties", 0)
	HK_PATCH_MEMBER_REMOVED("avoidanceProperties", TYPE_OBJECT, "hkaiAvoidanceSolverAvoidanceProperties", 0)
	HK_PATCH_DEPENDS("hkaiDefaultLocalSteeringPathFollowingProperties", 0)
	HK_PATCH_DEPENDS("hkaiAvoidanceSolverAvoidanceProperties", 2)
	HK_PATCH_DEPENDS("hkaiLocalSteering", 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshFace", 0, "hkaiNavMeshFace", 1)
	HK_PATCH_MEMBER_ADDED("clusterIndex", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMesh", 1, "hkaiNavMesh", 2)
	HK_PATCH_MEMBER_ADDED("aabb", TYPE_STRUCT, "hkAabb", 0)
	HK_PATCH_DEPENDS("hkAabb", 0)
	HK_PATCH_FUNCTION(hkaiNavMesh_1_to_2)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiTriangleMesh", 0, HK_NULL, HK_CLASS_REMOVED)
	HK_PATCH_MEMBER_REMOVED("triangles", TYPE_ARRAY_STRUCT, "hkaiTriangleMeshTriangle", 0)
	HK_PATCH_MEMBER_REMOVED("vertices", TYPE_ARRAY_VEC_4, HK_NULL, 0)
	HK_PATCH_DEPENDS("hkaiTriangleMeshTriangle", 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiTriangleMeshTriangle", 0, HK_NULL, HK_CLASS_REMOVED)
	HK_PATCH_MEMBER_REMOVED("userData", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("vertexIndices", TYPE_TUPLE_INT, HK_NULL, 3)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiStreamingDirectedGraphExternalEdgeInfo", 0)
	HK_PATCH_MEMBER_ADDED("nodeIndex", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("edgeKey", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("targetUid", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiDirectedGraphExplicitCostEdge", 0)
	HK_PATCH_MEMBER_ADDED("cost", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("target", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiStreamingDirectedGraph", 0)
	HK_PATCH_PARENT_SET(HK_NULL, "hkaiDirectedGraphExplicitCost")
	HK_PATCH_MEMBER_ADDED("sectionUid", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("externalEdges", TYPE_ARRAY_STRUCT, "hkaiStreamingDirectedGraphExternalEdgeInfo", 0)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkaiStreamingDirectedGraphExternalEdgeInfo", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
	HK_PATCH_DEPENDS("hkaiDirectedGraphExplicitCost", 0)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiDirectedGraphExplicitCost", 0)
	HK_PATCH_PARENT_SET(HK_NULL, "hkReferencedObject")
	HK_PATCH_MEMBER_ADDED("positions", TYPE_ARRAY_VEC_4, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("nodes", TYPE_ARRAY_STRUCT, "hkaiDirectedGraphExplicitCostNode", 0)
	HK_PATCH_MEMBER_ADDED("edges", TYPE_ARRAY_STRUCT, "hkaiDirectedGraphExplicitCostEdge", 0)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkaiDirectedGraphExplicitCostEdge", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
	HK_PATCH_DEPENDS("hkaiDirectedGraphExplicitCostNode", 0)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiDirectedGraphExplicitCostNode", 0)
	HK_PATCH_MEMBER_ADDED("edgeStartIndex", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("numEdges", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshEdge", 1, "hkaiNavMeshEdge", 2)
	HK_PATCH_MEMBER_REMOVED("oppositeRuntimeId", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiWorldPendingGoal", 0, "hkaiWorldPendingGoal", 1)
	HK_PATCH_MEMBER_ADDED("positionIndex", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshUserEdge", 0, "hkaiNavMeshUserEdge", 1)
	HK_PATCH_MEMBER_REMOVED("cost", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("oppositeSectionUid", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiCharacter", 5, "hkaiCharacter", 6)
	HK_PATCH_MEMBER_REMOVED("desiredVelocity", TYPE_VEC_4, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("avoidanceState", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED_INT("agentPriority", 1)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiAvoidanceSolverAvoidanceProperties", 2, "hkaiAvoidanceSolverAvoidanceProperties", 3)
	HK_PATCH_MEMBER_REMOVED("agentPenaltyWeight", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("boundaryPenaltyWeight", TYPE_REAL, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiAvoidancePairPropertiesPairData", 1)
	HK_PATCH_MEMBER_ADDED_INT("key", 0)
	HK_PATCH_MEMBER_ADDED_REAL("weight", 0.500000f)
	HK_PATCH_MEMBER_ADDED_REAL("cosViewAngle", -0.421600f)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiAvoidancePairProperties", 1)
	HK_PATCH_PARENT_SET(HK_NULL, "hkReferencedObject")
	HK_PATCH_MEMBER_ADDED("avoidancePairDataMap", TYPE_ARRAY_OBJECT, "hkaiAvoidancePairPropertiesPairData", 0)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkaiAvoidancePairPropertiesPairData", 1)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiWorld", 4, "hkaiWorld", 5)
	HK_PATCH_MEMBER_ADDED("avoidancePairProps", TYPE_OBJECT, "hkaiAvoidancePairProperties", 0)
	HK_PATCH_DEPENDS("hkaiAvoidancePairProperties", 1)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiCharacter", 6, "hkaiCharacter", 7)
	HK_PATCH_MEMBER_ADDED_INT("family", 1)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiCharacter", 7, "hkaiCharacter", 8)
	HK_PATCH_MEMBER_ADDED_BYTE("avoidanceEnabled", 1)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiAvoidanceSolverAvoidanceProperties", 3, "hkaiAvoidanceSolverAvoidanceProperties", 4)
	HK_PATCH_MEMBER_REMOVED("weight", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("cosViewAngle", TYPE_REAL, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiCharacter", 8, "hkaiCharacter", 9)
	HK_PATCH_MEMBER_REMOVED("family", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED_INT("avoidanceType", 1)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiCompoundSilhouette", 0, "hkaiCompoundSilhouette", 1)
	HK_PATCH_MEMBER_REMOVED("new", TYPE_BYTE, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("dirty", TYPE_BYTE, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMesh", 2, "hkaiNavMesh", 3)
	HK_PATCH_MEMBER_REMOVED("queryMediator", TYPE_OBJECT, "hkaiNavMeshQueryMediator", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshQueryMediator", 0)
	//HK_PATCH_FUNCTION(hkaiNavMesh_2_to_3)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiPath", 3, "hkaiPath", 4)
	HK_PATCH_MEMBER_ADDED("mediator", TYPE_OBJECT, "hkaiNavMeshQueryMediator", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshQueryMediator", 0)
	//HK_PATCH_FUNCTION(hkaiPath_3_to_4)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiNavMeshManager", 0)
	HK_PATCH_MEMBER_ADDED("sections", TYPE_ARRAY_STRUCT, "hkaiNavMeshManagerSectionInfo", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshManagerSectionInfo", 0)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiNavMeshCutterOriginalEdgeInfo", 0)
	HK_PATCH_MEMBER_ADDED("edgeIndex", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("faceIndex", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("oppositeEdge", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("oppositeFace", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiNavMeshManagerSectionInfo", 0)
	HK_PATCH_MEMBER_ADDED("uid", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("sectionPtr", TYPE_OBJECT, "hkaiNavMesh", 0)
	HK_PATCH_MEMBER_ADDED("clusterGraph", TYPE_OBJECT, "hkaiStreamingDirectedGraph", 0)
	HK_PATCH_MEMBER_ADDED("mediator", TYPE_OBJECT, "hkaiNavMeshQueryMediator", 0)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkaiNavMesh", 3)
	HK_PATCH_DEPENDS("hkaiNavMeshQueryMediator", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
	HK_PATCH_DEPENDS("hkaiDirectedGraphExplicitCost", 0)
	HK_PATCH_DEPENDS("hkaiStreamingDirectedGraph", 0)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiWorldDynamicNavMeshInfo", 0)
	HK_PATCH_MEMBER_ADDED("cutter", TYPE_OBJECT, "hkaiNavMeshCutter", 0)
	HK_PATCH_MEMBER_ADDED("dynamicMediator", TYPE_OBJECT, "hkaiCutNavMeshQueryMediator", 0)
	HK_PATCH_DEPENDS("hkaiCutNavMeshQueryMediator", 1)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshCutter", 1)
	HK_PATCH_DEPENDS("hkaiNavMeshQueryMediator", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshCutterDebugSnapshot", 0, HK_NULL, HK_CLASS_REMOVED)
	HK_PATCH_PARENT_SET("hkReferencedObject", HK_NULL)
	HK_PATCH_MEMBER_REMOVED("cutter", TYPE_OBJECT, "hkaiNavMeshCutter", 0)
	HK_PATCH_MEMBER_REMOVED("sils", TYPE_ARRAY_OBJECT, "hkaiCompoundSilhouette", 0)
	HK_PATCH_MEMBER_REMOVED("faces", TYPE_ARRAY_INT, HK_NULL, 0)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshCutter", 1)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
	HK_PATCH_DEPENDS("hkaiCompoundSilhouette", 1)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshCutter", 1, "hkaiNavMeshCutter", 2)
	HK_PATCH_MEMBER_REMOVED("mesh", TYPE_OBJECT, "hkaiNavMesh", 0)
	HK_PATCH_MEMBER_ADDED("connectivityInfo", TYPE_ARRAY_STRUCT, "hkaiNavMeshCutterOriginalEdgeInfo", 0)
	HK_PATCH_DEPENDS("hkaiNavMesh", 3)
	HK_PATCH_DEPENDS("hkaiNavMeshCutterOriginalEdgeInfo", 0)
	//HK_PATCH_FUNCTION(hkaiNavMeshCutter_1_to_2)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiWorld", 5, "hkaiWorld", 6)
	HK_PATCH_MEMBER_REMOVED("navMesh", TYPE_OBJECT, "hkaiNavMesh", 0)
	HK_PATCH_MEMBER_REMOVED("dynamicNavMesh", TYPE_STRUCT, "hkaiNavMesh", 0)
	HK_PATCH_MEMBER_REMOVED("cutter", TYPE_STRUCT, "hkaiNavMeshCutter", 0)
	HK_PATCH_MEMBER_REMOVED("repathingThreshold", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("maxCharRepathPerFrame", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("cutCounter", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("streamingManager", TYPE_STRUCT, "hkaiNavMeshManager", 0)
	HK_PATCH_MEMBER_ADDED("dynamicInfo", TYPE_ARRAY_STRUCT, "hkaiWorldDynamicNavMeshInfo", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshCutter", 1)
	HK_PATCH_DEPENDS("hkaiNavMesh", 3)
	HK_PATCH_DEPENDS("hkaiWorldDynamicNavMeshInfo", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshManager", 0)
	//HK_PATCH_FUNCTION(hkaiWorld_5_to_6)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiNavMeshCutterCutOptions", 0)
	HK_PATCH_MEMBER_ADDED("cutFaceType", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiWorld", 6, "hkaiWorld", 7)
	HK_PATCH_MEMBER_REMOVED("cutOptions", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("cutOptions", TYPE_STRUCT, "hkaiNavMeshCutterCutOptions", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshCutterCutOptions", 0)
	//HK_PATCH_FUNCTION(hkaiWorld_6_to_7)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiStreamingMediator", 0)
	HK_PATCH_PARENT_SET(HK_NULL, "hkaiNavMeshQueryMediator")
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshQueryMediator", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiNavMeshCutterMeshInfo", 0)
	HK_PATCH_MEMBER_ADDED("originalNumFaces", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("originalNumEdges", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("originalNumVertices", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("magic", TYPE_ARRAY_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshCutter", 2, "hkaiNavMeshCutter", 3)
	HK_PATCH_MEMBER_REMOVED("originalNumFaces", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("originalNumEdges", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("originalNumVertices", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("magic", TYPE_ARRAY_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("meshInfos", TYPE_ARRAY_OBJECT, "hkaiNavMeshCutterMeshInfo", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshCutterMeshInfo", 0)
	//HK_PATCH_FUNCTION(hkaiNavMeshCutter_2_to_3)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiWorld", 7, "hkaiWorld", 8)
	HK_PATCH_MEMBER_ADDED("cutter", TYPE_STRUCT, "hkaiNavMeshCutter", 0)
	HK_PATCH_MEMBER_ADDED("dynamicMediator", TYPE_OBJECT, "hkaiCutNavMeshQueryMediator", 0)
	HK_PATCH_DEPENDS("hkaiCutNavMeshQueryMediator", 1)
	HK_PATCH_DEPENDS("hkaiNavMeshCutter", 2)
	HK_PATCH_DEPENDS("hkaiNavMeshQueryMediator", 0)
	//HK_PATCH_FUNCTION(hkaiWorld_7_to_8)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshCutterOriginalEdgeInfo", 0, "hkaiNavMeshCutterOriginalEdgeInfo", 1)
	HK_PATCH_MEMBER_REMOVED("edgeIndex", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("faceIndex", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("edgeKey", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("faceKey", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiWorldDynamicNavMeshInfo", 0, "hkaiWorldDynamicNavMeshInfo", 1)
	HK_PATCH_MEMBER_REMOVED("cutter", TYPE_OBJECT, "hkaiNavMeshCutter", 0)
	HK_PATCH_MEMBER_REMOVED("dynamicMediator", TYPE_OBJECT, "hkaiCutNavMeshQueryMediator", 0)
	HK_PATCH_DEPENDS("hkaiCutNavMeshQueryMediator", 1)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshCutter", 2)
	HK_PATCH_DEPENDS("hkaiNavMeshQueryMediator", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
	//HK_PATCH_FUNCTION(hkaiWorldDynamicNavMeshInfo_0_to_1)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiCharacterRepathInformation", 0)
	HK_PATCH_MEMBER_ADDED("pathAge", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("pathFailCount", TYPE_BYTE, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("meshWasCut", TYPE_BYTE, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiCharacter", 9, "hkaiCharacter", 10)
	HK_PATCH_MEMBER_ADDED("repathInformation", TYPE_STRUCT, "hkaiCharacterRepathInformation", 0)
	HK_PATCH_DEPENDS("hkaiCharacterRepathInformation", 0)
	//HK_PATCH_FUNCTION(hkaiCharacter_9_to_10)
HK_PATCH_END()


HK_PATCH_BEGIN("hkaiStreamingMediator", 0, HK_NULL, HK_CLASS_REMOVED)
	HK_PATCH_PARENT_SET("hkaiNavMeshQueryMediator", HK_NULL)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshQueryMediator", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshManager", 0, "hkaiNavMeshManager", 1)
	HK_PATCH_MEMBER_ADDED("aabb", TYPE_STRUCT, "hkAabb", 0)
	HK_PATCH_DEPENDS("hkAabb", 0)
	//HK_PATCH_FUNCTION(hkaiNavMeshManager_0_to_1)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiCutNavMeshQueryMediator", 1, "hkaiCutNavMeshQueryMediator", 2)
	HK_PATCH_MEMBER_REMOVED("orig", TYPE_OBJECT, "hkaiNavMeshQueryMediator", 0)
	HK_PATCH_MEMBER_ADDED("manager", TYPE_OBJECT, "hkaiNavMeshManager", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshManager", 0)
	//HK_PATCH_FUNCTION(hkaiCutNavMeshQueryMediator_1_to_2)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiCutNavMeshQueryMediator", 2, "hkaiDynamicNavMeshQueryMediator", 2)
 	HK_PATCH_DEPENDS("hkBaseObject", 0)
 	HK_PATCH_DEPENDS("hkaiNavMeshCutter", 3)
 	HK_PATCH_DEPENDS("hkaiNavMeshQueryMediator", 0)
 	HK_PATCH_DEPENDS("hkaiNavMeshManager", 1)
 	HK_PATCH_DEPENDS("hkReferencedObject", 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiDynamicNavMeshQueryMediator", 2, "hkaiDynamicNavMeshQueryMediator", 3)
	HK_PATCH_MEMBER_REMOVED("manager", TYPE_OBJECT, "hkaiNavMeshManager", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshManager", 1)
	//HK_PATCH_FUNCTION(hkaiDynamicNavMeshQueryMediator_2_to_3)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiAvoidancePairProperties", 1, "hkaiAvoidancePairProperties", 2)
	HK_PATCH_MEMBER_REMOVED("avoidancePairDataMap", TYPE_ARRAY_OBJECT, "hkaiAvoidancePairPropertiesPairData", 0)
	HK_PATCH_MEMBER_ADDED("avoidancePairDataMap", TYPE_ARRAY_STRUCT, "hkaiAvoidancePairPropertiesPairData", 0)
	HK_PATCH_DEPENDS("hkaiAvoidancePairPropertiesPairData", 1)
	//HK_PATCH_FUNCTION(hkaiAvoidancePairProperties_1_to_2)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiNavMeshGenerationUtilsEdgeMatchingParameters", 0)
	HK_PATCH_MEMBER_ADDED("maxStepHeight", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("maxSeparation", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("cosAlignmentAngle", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("minEdgeOverlap", TYPE_REAL, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshCutter", 3, "hkaiNavMeshCutter", 4)
	HK_PATCH_MEMBER_REMOVED("stepHeight", TYPE_REAL, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("up", TYPE_VEC_4, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("edgeMatchParams", TYPE_STRUCT, "hkaiNavMeshGenerationUtilsEdgeMatchingParameters", 0)
	HK_PATCH_MEMBER_ADDED_REAL("cutEdgeTolerance", 0.000100f)
	HK_PATCH_DEPENDS("hkaiNavMeshGenerationUtilsEdgeMatchingParameters", 0)
	//HK_PATCH_FUNCTION(hkaiNavMeshCutter_3_to_4)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiDirectedGraphExplicitCostExternalEdgeInfo", 0)
	HK_PATCH_MEMBER_ADDED("nodeIndex", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("edgeKey", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("targetUid", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiDirectedGraphExplicitCost", 0, "hkaiDirectedGraphExplicitCost", 1)
	HK_PATCH_MEMBER_ADDED("sectionUid", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_ADDED("externalEdges", TYPE_ARRAY_STRUCT, "hkaiDirectedGraphExplicitCostExternalEdgeInfo", 0)
	HK_PATCH_DEPENDS("hkaiDirectedGraphExplicitCostExternalEdgeInfo", 0)
	//HK_PATCH_FUNCTION(hkaiDirectedGraphExplicitCost_0_to_1)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshManagerSectionInfo", 0, "hkaiNavMeshManagerSectionInfo", 1)
	HK_PATCH_MEMBER_REMOVED("clusterGraph", TYPE_OBJECT, "hkaiStreamingDirectedGraph", 0)
	HK_PATCH_MEMBER_ADDED("clusterGraph", TYPE_OBJECT, "hkaiDirectedGraphExplicitCost", 0)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
	HK_PATCH_DEPENDS("hkaiDirectedGraphExplicitCost", 1)
	HK_PATCH_DEPENDS("hkaiStreamingDirectedGraph", 0)
	//HK_PATCH_FUNCTION(hkaiNavMeshManagerSectionInfo_0_to_1)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiStreamingDirectedGraph", 0, HK_NULL, HK_CLASS_REMOVED)
	HK_PATCH_PARENT_SET("hkaiDirectedGraphExplicitCost", HK_NULL)
	HK_PATCH_MEMBER_REMOVED("sectionUid", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("externalEdges", TYPE_ARRAY_STRUCT, "hkaiStreamingDirectedGraphExternalEdgeInfo", 0)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkaiStreamingDirectedGraphExternalEdgeInfo", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
	HK_PATCH_DEPENDS("hkaiDirectedGraphExplicitCost", 1)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiStreamingDirectedGraphExternalEdgeInfo", 0, HK_NULL, HK_CLASS_REMOVED)
	HK_PATCH_MEMBER_REMOVED("nodeIndex", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("edgeKey", TYPE_INT, HK_NULL, 0)
	HK_PATCH_MEMBER_REMOVED("targetUid", TYPE_INT, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshManager", 1, "hkaiNavMeshManager", 2)
	HK_PATCH_PARENT_SET(HK_NULL, "hkReferencedObject")
	//HK_PATCH_FUNCTION(hkaiNavMeshManager_1_to_2)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiPath", 4, "hkaiPath", 5)
	HK_PATCH_MEMBER_REMOVED("navMesh", TYPE_OBJECT, "hkaiNavMesh", 0)
	HK_PATCH_MEMBER_ADDED("navMeshManager", TYPE_OBJECT, "hkaiNavMeshManager", 0)
	HK_PATCH_DEPENDS("hkaiNavMesh", 3)
	HK_PATCH_DEPENDS("hkaiNavMeshManager", 2)
	//HK_PATCH_FUNCTION(hkaiPath_4_to_5)
HK_PATCH_END()

HK_PATCH_BEGIN(HK_NULL, HK_CLASS_ADDED, "hkaiNavMeshCutterSavedConnectivity", 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshCutter", 4, "hkaiNavMeshCutter", 5)
	HK_PATCH_MEMBER_REMOVED("connectivityInfo", TYPE_ARRAY_STRUCT, "hkaiNavMeshCutterOriginalEdgeInfo", 0)
	HK_PATCH_DEPENDS("hkaiNavMeshCutterOriginalEdgeInfo", 1)
	//HK_PATCH_FUNCTION(hkaiNavMeshCutter_4_to_5)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshCutter", 5, "hkaiNavMeshCutter", 6)
	HK_PATCH_MEMBER_ADDED_REAL("minEdgeMatchingLength", 0.010000f)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiWorld", 8, "hkaiWorld", 9)
	HK_PATCH_MEMBER_REMOVED("dynamicInfo", TYPE_ARRAY_STRUCT, "hkaiWorldDynamicNavMeshInfo", 0)
	HK_PATCH_DEPENDS("hkaiWorldDynamicNavMeshInfo", 1)
	//HK_PATCH_FUNCTION(hkaiWorld_8_to_9)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiWorldDynamicNavMeshInfo", 1, HK_NULL, HK_CLASS_REMOVED)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiNavMeshManager", 2, "hkaiNavMeshManager", 3)
	HK_PATCH_MEMBER_ADDED("isTemporary", TYPE_BYTE, HK_NULL, 0)
HK_PATCH_END()

HK_PATCH_BEGIN("hkaiCompoundSilhouette", 1, HK_NULL, HK_CLASS_REMOVED)
	HK_PATCH_PARENT_SET("hkReferencedObject", HK_NULL)
	HK_PATCH_MEMBER_REMOVED("points", TYPE_ARRAY_VEC_4, HK_NULL, 0)
	HK_PATCH_DEPENDS("hkBaseObject", 0)
	HK_PATCH_DEPENDS("hkReferencedObject", 0)
HK_PATCH_END()

/*
 * Havok SDK - NO SOURCE PC DOWNLOAD, BUILD(#20120831)
 * 
 * Confidential Information of Havok.  (C) Copyright 1999-2012
 * Telekinesys Research Limited t/a Havok. All Rights Reserved. The Havok
 * Logo, and the Havok buzzsaw logo are trademarks of Havok.  Title, ownership
 * rights, and intellectual property rights in the Havok software remain in
 * Havok and/or its suppliers.
 * 
 * Use of this software for evaluation purposes is subject to and indicates
 * acceptance of the End User licence Agreement for this product. A copy of
 * the license is included with this software and is also available at www.havok.com/tryhavok.
 * 
 */
